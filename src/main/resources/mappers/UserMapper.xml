<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.marathon.mapper.UserMapper">
    <resultMap id="UserResultMap" type="com.project.marathon.dto.UserResponse">
        <id property="userUuid" column="user_uuid" jdbcType="VARCHAR" typeHandler="com.project.marathon.config.UUIDTypeHandler"/>
        <result property="userId" column="user_id"/>
        <result property="userEmail" column="user_email"/>
        <result property="userName" column="user_name"/>
        <result property="userPassword" column="user_password"/>
        <result property="userHp" column="user_hp"/>
        <result property="userRegDt" column="user_reg_dt"/>
        <result property="userRole" column="user_role"/>
    </resultMap>

    <!-- 공통 사용자 리스트 조회 쿼리 -->
    <sql id="userListBaseQuery">
        FROM tb_users
        WHERE
            (#{keyword} IS NULL OR user_id ILIKE '%' || #{keyword} || '%' OR user_name ILIKE '%' || #{keyword} || '%')
    </sql>

    <!-- 공통 컬럼 목록 정의 -->
    <sql id="userSelectColumns">
        user_uuid, user_id, user_password, user_email
        , user_name, user_role, user_hp, user_reg_dt, user_last_login_dt
    </sql>

    <!-- user_name으로 사용자 조회 -->
    <select id="findByUserName" parameterType="String" resultType="UserResponse">
        SELECT <include refid="userSelectColumns"/>
        FROM tb_users
        WHERE user_name = #{userName}
    </select>

    <!-- user_id로 사용자 조회 -->
    <select id="findByUserId" parameterType="String" resultMap="UserResultMap">
        SELECT <include refid="userSelectColumns"/>
        FROM tb_users
        WHERE user_id = #{userId}
        AND user_status = 'Y'
    </select>

    <!-- 사용자 삽입 -->
    <insert id="insertUser" parameterType="UserRequest" useGeneratedKeys="true" keyProperty="userId">
        INSERT INTO tb_users (user_uuid, user_id, user_name, user_password, user_email, user_role)
        VALUES (#{userUuid, typeHandler=com.project.marathon.config.UUIDTypeHandler}
               , #{userId}, #{userName}, #{userPassword}, #{userEmail}, COALESCE(#{userRole}, 'USER'))
    </insert>

    <select id="lastLoginDateUpdate" parameterType="String" resultMap="UserResultMap">
        UPDATE tb_users
        SET user_last_login_dt = CURRENT_TIMESTAMP
        WHERE user_id = #{userId}
        RETURNING *;
    </select>

    <!-- 아이디 중복 확인 -->
    <select id="countByUserId" resultType="int">
        SELECT COUNT(*) FROM tb_users WHERE user_id = #{userId}
    </select>

    <!-- 이메일 중복 확인 -->
    <select id="countByUserEmail" resultType="int">
        SELECT COUNT(*) FROM tb_users WHERE user_email = #{userEmail}
    </select>

    <update id="modifyUser" parameterType="UserRequest">
        update tb_users
        <set>
            user_name = #{userName},
            user_modify_dt = now()
            <if test="userEmail != null and userEmail != ''">
                , user_email = #{userEmail}
            </if>
            <if test="userPassword != null and userPassword != ''">
                , user_password = #{userPassword}
            </if>
        </set>
        where user_uuid = #{userUuid};
    </update>

    <update id="deleteUser" parameterType="String">
        update tb_users
        <set>
            user_status = 'N',
            user_un_reg_dt = now()
        </set>
        where user_uuid = #{userUuid};
    </update>



    <!-- 사용자 리스트 조회 -->
    <select id="getUserList" parameterType="userRequest" resultMap="UserResultMap">
        SELECT <include refid="userSelectColumns"/>
        <include refid="userListBaseQuery"/>
        ORDER BY user_reg_dt DESC
        LIMIT #{rows} OFFSET #{offset}
    </select>

    <!-- 총 사용자 개수 조회 -->
    <select id="getTotalUserCount" parameterType="map" resultType="int">
        SELECT COUNT(*)
        FROM (
            SELECT user_uuid
            <include refid="userListBaseQuery"/>
        ) AS total_users
    </select>

</mapper>
